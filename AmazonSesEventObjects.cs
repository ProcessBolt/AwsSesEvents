//===================================================================================================================//
//-------------------------------------------------------------------------------------------------------------------//
//                                                                                                                   //
//  AmazonSesEventObjects.cs                                                                                         //
//                                                                                                                   //
//  Collection of objects representing the notification events generated by SES that are found in SQS                //
//                                                                                                                   //
//  https://github.com/ProcessBolt/AwsSesEvents                                                                      //
//                                                                                                                   //
//-------------------------------------------------------------------------------------------------------------------//
//                                                                                                                   //
//  Copyright 2018 ProcessBolt, Inc.                                                                                 //
//                                                                                                                   //
//  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated     //
//  documentation files (the “Software”), to deal in the Software without restriction, including without limitation  //
//  the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,     //
//  and to permit persons to whom the Software is furnished to do so, subject to the following conditions:           //
//                                                                                                                   //
//  The above copyright notice and this permission notice shall be included in all copies or                         //
//  substantial portions of the Software.                                                                            //
//                                                                                                                   //
//  THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED    //
//  TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL     //
//  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF    //
//  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER         //
//  DEALINGS IN THE SOFTWARE                                                                                         //
//                                                                                                                   //
//-------------------------------------------------------------------------------------------------------------------//
//
//  HISTORY:
//      2018-11-24 Original (Dan Gardner, ProcessBolt)
//      2019-11-12 Added structures for reply notifications (Dan Gardner, ProcessBolt)
//

using System.Collections.Generic;

/// <summary>
/// AwsSesUtils is a collection of objects representing the notification events generated by SES that are found in SQS
/// </summary>
/// <see cref="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/event-publishing-retrieving-firehose-contents.html"/>
/// <seealso cref="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-notifications-contents.html"/>
/// <seealso cref="https://aws.amazon.com/blogs/messaging-and-targeting/introducing-sending-metrics/"/>
namespace AwsSesEventObjects
{

    /// <summary>
    /// Represents an AWS SES notification stored in Amazon SQS.
    /// </summary>
    public class AwsSqsMessage
    {
        /// <summary>Type is always(?) "Notification"</summary>
        public string Type { get; set; }

        /// <summary>Unique identifier for this messsage.</summary>
        public string MessageId { get; set; }

        /// <summary>Subject is always(?) "Amazon SES Email Event Notification" or "Amazon SES Email Receipt Notification"</summary>
        public string Subject { get; set; }

        /// <summary>Message contains the JSON object represeted by AwsSesEvent</summary>
        public string Message { get; set; }

        /// <summary>ARN for this topic.</summary>
        public string TopicArn { get; set; }

        /// <summary>Timestamp.</summary>
        public string Timestamp { get; set; }

        /// <summary>SignatureVersion is always(?) "1".</summary>
        public string SignatureVersion { get; set; }

        /// <summary>Signature data.</summary>
        public string Signature { get; set; }

        /// <summary>SigningCertURL.</summary>
        public string SigningCertURL { get; set; }

        /// <summary>UnsubscribeURL.</summary>
        public string UnsubscribeURL { get; set; }
    }


    /// <summary>
    /// The top level object for SES event notifications
    /// </summary>
    public class AwsSesEvent
    {
        /// <summary>eventType - A string that describes the type of event. Possible values: Delivery, Send, Reject, Open, Click, Bounce, Complaint, or Rendering Failure.</summary>
        public string EventType { get; set; }

        /// <summary>mail - A JSON object that contains information about the email that produced the event.</summary>
        public AwsSesEventMail Mail { get; set; }

        /// <summary>send - This field is only present if eventType is Send.</summary>
        public AwsSesEventSend Send { get; set; }

        /// <summary>delivery - This field is only present if eventType is Delivery. It contains information about the delivery.</summary>
        public AwsSesEventDelivery Delivery { get; set; }

        /// <summary>open - This field is only present if eventType is Open. It contains information about the open event.</summary>
        public AwsSesEventOpen Open { get; set; }

        /// <summary>bounce - This field is only present if eventType is Bounce. It contains information about the bounce.</summary>
        public AwsSesEventBounce Bounce { get; set; }

        /// <summary>click - This field is only present if eventType is Click. It contains information about the click event.</summary>
        public AwsSesEventClick Click { get; set; }

        /// <summary>complaint - This field is only present if eventType is Complaint. It contains information about the complaint.</summary>
        public AwsSesEventComplaint Complaint { get; set; }

        /// <summary>reject - This field is only present if eventType is Reject. It contains information about the rejection.</summary>
        public AwsSesEventRejected Reject { get; set; }

        /// <summary>failure - This field is only present if eventType is Rendering Failure. It contains information about the rendering failure event.</summary>
        public AwsSesEventFailure Failure { get; set; }
    }


    /// <summary>
    /// AwsSesEventMail
    /// </summary>
    public class AwsSesEventMail
    {
        /// <summary>timestamp - The time at which the original message was sent (in ISO8601 format).</summary>
        public string Timestamp { get; set; }

        /// <summary>messageId - A unique ID that Amazon SES assigned to the message. Amazon SES returned this value to you when you sent the message.</summary>
        public string MessageId { get; set; }

        /// <summary>source - The email address from which the original message was sent (the envelope MAIL FROM address).</summary>
        public string Source { get; set; }

        /// <summary>sourceArn - The Amazon Resource Name (ARN) of the identity that was used to send the email. In the case of sending authorization, the sourceArn is the ARN of the identity that the identity owner authorized the delegate sender to use to send the email. For more information about sending authorization, see Using Sending Authorization.</summary>
        public string SourceArn { get; set; }

        /// <summary>sourceIp - The originating public IP address of the client that performed the email sending request to Amazon SES.</summary>
        public string SourceIp { get; set; }

        /// <summary>sendingAccountId - The AWS account ID of the account that was used to send the email. In the case of sending authorization, the sendingAccountId is the delegate sender's account ID.</summary>
        public string SendingAccountId { get; set; }

        /// <summary>destination - A list of email addresses that were recipients of the original mail.</summary>
        public List<string> Destination { get; set; }

        /// <summary>headersTruncated - This object is only present if you configured the notification settings to include the headers from the original email. Indicates whether the headers are truncated in the notification. Amazon SES truncates the headers in the notification when the headers from the original message are 10KB or larger in size. Possible values are true and false.</summary>
        public bool HeadersTruncated { get; set; }

        /// <summary>headers - This object is only present if you configured the notification settings to include the headers from the original email.  A list of the email's original headers. Each header in the list has a name field and a value field.</summary>
        public List<AwsSesEventHeaderItem> Headers { get; set; }

        /// <summary>commonHeaders - This object is only present if you configured the notification settings to include the headers from the original email. Includes information about common email headers from the original email, including the From, To, and Subject fields. Within this object, each header is a key. The From and To fields are represented by arrays that can contain multiple values.</summary>
        public AwsSesEventCommonHeaders CommonHeaders { get; set; }

        /// <summary>tags</summary>
        public Dictionary<string, List<string>> Tags { get; set; }
    }


    /// <summary>
    /// AwsSesEventHeaderItem
    /// </summary>
    public class AwsSesEventHeaderItem
    {
        public string Name { get; set; }
        public string Value { get; set; }
    }


    /// <summary>
    /// AwsSesEventCommonHeaders
    /// </summary>
    public class AwsSesEventCommonHeaders
    {
        /// <summary>messageId - The ID of the original message.</summary>
        public string MessageId { get; set; }

        /// <summary>date - The date and time when Amazon SES received the message.</summary>
        public string Date { get; set; }

        /// <summary>to - The values in the To header of the email.</summary>
        public List<string> To { get; set; }

        /// <summary>cc - The values in the CC header of the email.</summary>
        public List<string> Cc { get; set; }

        /// <summary>bcc - The values in the BCC header of the email.</summary>
        public List<string> Bcc { get; set; }

        /// <summary>from - The values in the From header of the email.</summary>
        public List<string> From { get; set; }

        /// <summary>sender - The values in the Sender header of the email.</summary>
        public List<string> Sender { get; set; }

        /// <summary>returnPath - The values in the Return-Path header of the email.</summary>
        public List<string> ReturnPath { get; set; }

        /// <summary>reply-to - The values in the Reply-To header of the email.</summary>
        public List<string> ReplyTo { get; set; }

        /// <summary>subject - The value of the Subject header for the email.</summary>
        public string Subject { get; set; }
    }


    /// <summary>
    /// AwsSesEventSend
    /// </summary>
    public class AwsSesEventSend
    {
        // This is always empty
    }


    /// <summary>
    /// AwsSesEventDelivery
    /// </summary>
    public class AwsSesEventDelivery
    {
        /// <summary>timestamp - The date and time when Amazon SES delivered the email to the recipient's mail server, in ISO8601 format (YYYY-MM-DDThh:mm:ss.sZ).</summary>
        public string Timestamp { get; set; }

        /// <summary>processingTimeMillis - The time in milliseconds between when Amazon SES accepted the request from the sender to when Amazon SES passed the message to the recipient's mail server.</summary>
        public string ProcessingTimeMillis { get; set; }

        /// <summary>recipients - A list of intended recipients that the delivery event applies to.</summary>
        public List<string> Recipients { get; set; }

        /// <summary>smtpResponse - The SMTP response message of the remote ISP that accepted the email from Amazon SES. This message will vary by email, by receiving mail server, and by receiving ISP.</summary>
        public string SmtpResponse { get; set; }

        /// <summary>reportingMTA - The host name of the Amazon SES mail server that sent the mail.</summary>
        public string ReportingMTA { get; set; }
    }


    /// <summary>
    /// AwsSesEventOpen
    /// </summary>
    public class AwsSesEventOpen
    {
        /// <summary>ipAddress- The recipient's IP address.</summary>
        public string IpAddress { get; set; }

        /// <summary>timestamp - The date and time when the open event occurred in ISO8601 format (YYYY-MM-DDThh:mm:ss.sZ).</summary>
        public string Timestamp { get; set; }

        /// <summary>userAgent - The user agent of the device or email client that the recipient used to open the email.</summary>
        public string UserAgent { get; set; }
    }


    /// <summary>
    /// AwsSesEventClick
    /// </summary>
    public class AwsSesEventClick
    {
        /// <summary>ipAddress- The recipient's IP address.</summary>
        public string IpAddress { get; set; }

        /// <summary>timestamp - The date and time when the open event occurred in ISO8601 format (YYYY-MM-DDThh:mm:ss.sZ).</summary>
        public string Timestamp { get; set; }

        /// <summary>userAgent - The user agent of the device or email client that the recipient used to open the email.</summary>
        public string UserAgent { get; set; }

        /// <summary>link -The URL of the link that the recipient clicked.</summary>
        public string Link { get; set; }

        /// <summary>linkTags - A list of tags that were added to the link using the ses:tags attribute.</summary>
        public Dictionary<string, List<string>> LinkTags { get; set; }
    }


    /// <summary>
    /// AwsSesEventBounce
    /// </summary>
    public class AwsSesEventBounce
    {
        /// <summary>bounceType -The type of bounce, as determined by Amazon SES.</summary>
        public string BounceType { get; set; }

        /// <summary>bounceSubType - The subtype of the bounce, as determined by Amazon SES.</summary>
        public string BounceSubType { get; set; }

        /// <summary>bouncedRecipients - A list that contains information about the recipients of the original mail that bounced.</summary>
        public List<AwsSesEventBouncedRecipient> BouncedRecipients { get; set; }

        /// <summary>timestamp - The date and time, in ISO8601 format (YYYY-MM-DDThh:mm:ss.sZ), when the ISP sent the bounce notification.</summary>
        public string Timestamp { get; set; }

        /// <summary>feedbackId - A unique ID for the bounce.</summary>
        public string FeedbackId { get; set; }

        /// <summary>reportingMTA - The value of the Reporting-MTA field from the DSN.This is the value of the Message Transfer Authority (MTA) that attempted to perform the delivery, relay, or gateway operation described in the DSN.</summary>
        public string ReportingMTA { get; set; }
    }


    /// <summary>
    /// AwsSesEventBouncedRecipient
    /// </summary>
    public class AwsSesEventBouncedRecipient
    {
        /// <summary>emailAddress - The email address of the recipient.If a DSN is available, this is the value of the Final-Recipient field from the DSN.</summary>
        public string EmailAddress { get; set; }

        /// <summary>action - The value of the Action field from the DSN.This indicates the action performed by the reporting MTA as a result of its attempt to deliver the message to this recipient.</summary>
        public string Action { get; set; }

        /// <summary>status - The value of the Status field from the DSN. This is the per-recipient transport-independent status code that indicates the delivery status of the message.</summary>
        public string Status { get; set; }

        /// <summary>diagnosticCode - The status code issued by the reporting MTA.This is the value of the Diagnostic-Code field from the DSN.This field may be absent in the DSN (and therefore also absent in the JSON).</summary>
        public string DiagnosticCode { get; set; }
    }


    /// <summary>
    /// AwsSesEventComplaint
    /// </summary>
    public class AwsSesEventComplaint
    {
        /// <summary>complainedRecipients - A list that contains information about recipients that may have submitted the complaint.</summary>
        public List<AwsSesEventComplaintRecipient> ComplainedRecipients { get; set; }

        /// <summary>timestamp - The date and time, in ISO8601 format (YYYY-MM-DDThh:mm:ss.sZ), when the ISP sent the complaint notification.</summary>
        public string Timestamp { get; set; }

        /// <summary>feedbackId - A unique ID for the complaint.</summary>
        public string FeedbackId { get; set; }

        /// <summary>userAgent - The value of the User-Agent field from the feedback report. This indicates the name and version of the system that generated the report.</summary>
        public string UserAgent { get; set; }

        /// <summary>complaintFeedbackType - The value of the Feedback-Type field from the feedback report received from the ISP. This contains the type of feedback.</summary>
        public string ComplaintFeedbackType { get; set; }

        /// <summary>arrivalDate - The value of the Arrival-Date or Received-Date field from the feedback report in ISO8601 format (YYYY-MM-DDThh:mm:ss.sZ). This field may be absent in the report(and therefore also absent in the JSON).</summary>
        public string ArrivalDate { get; set; }
    }


    /// <summary>
    /// AwsSesEventComplaintRecipient - Who complained
    /// </summary>
    public class AwsSesEventComplaintRecipient
    {
        /// <summary>emailAddress - The email address of the recipient. If a DSN is available, this is the value of the Final-Recipient field from the DSN.</summary>
        public string EmailAddress { get; set; }
    }


    /// <summary>
    /// AwsSesEventRejected - Basically means a virus was found.
    /// </summary>
    public class AwsSesEventRejected
    {
        /// <summary>reason - The reason the email was rejected.The only possible value is Bad content, which means that Amazon SES detected that the email contained a virus.When a message is rejected, Amazon SES stops processing it, and doesn't attempt to deliver it to the recipient's mail server.</summary>
        public string Reason { get; set; }
    }

    
    /// <summary>
    /// AwsSesEventFailure - Template Rendering Failure.  This happens when using SES templates
    /// </summary>
    /// <remarks>The completeness and accuracy of this object is uncertain.  No documentation found.</remarks>
    public class AwsSesEventFailure
    {
        /// <summary>Renderting failure error message</summary>
        public string errorMessage;

        /// <summary>Name of the template.</summary>
        public string templateName;
    }

    /// <summary>
    /// The top level object for SES receipt notifications
    /// </summary>
    public class AwsSesReceiptNotification
    {
        /// <summary>
        /// The notification type. For this type of notification, the value is always Received.
        /// </summary>
        public string NotificationType { get; set; }

        /// <summary>
        /// Object that contains information about the email delivery.
        /// </summary>
        public AwsSesReceiptNotificationReceipt Receipt { get; set; }

        /// <summary>
        /// Object that contains information about the email associated with the notification.
        /// </summary>
        public AwsSesReceiptNotificationMail Mail { get; set; }

        /// <summary>
        /// String that contains the raw, unmodified email, which is typically in Multipurpose Internet Mail Extensions (MIME) format. For more information about MIME format, see RFC 2045.
        /// </summary>
        public string Content { get; set; }
    }

    /// <summary>
    /// Object that contains information about the email delivery.
    /// </summary>
    public class AwsSesReceiptNotificationReceipt
    {
        /// <summary>
        /// action - Object that encapsulates information about the action that was executed.For a list of possible values, see action Object.
        /// </summary>
        public AwsSesReceiptNotificationReceiptAction Action { get; set; }

        /// <summary>
        /// dkimVerdict - Object that indicates whether the DomainKeys Identified Mail(DKIM) check passed.For a list of possible values, see dkimVerdict Object.
        /// </summary>
        public AwsSesReceiptNotificationReceiptDkimVerdict DkimVerdict { get; set; }

        /// <summary>
        /// dmarcPolicy - Indicates the Domain-based Message Authentication, Reporting & Conformance (DMARC) settings for the sending domain.This field only appears if the message fails DMARC authentication.
        /// </summary>
        public string DmarcPolicy { get; set; }

        /// <summary>
        /// dmarcVerdict - Object that indicates whether the Domain-based Message Authentication, Reporting & Conformance (DMARC) check passed.For a list of possible values, see dmarcVerdict Object.
        /// </summary>
        public AwsSesReceiptNotificationReceiptDmarcVerdict DmarcVerdict { get; set; }

        /// <summary>
        /// processingTimeMillis - String that specifies the period, in milliseconds, from the time Amazon SES received the message to the time it triggered the action.
        /// </summary>
        public string ProcessingTimeMillis { get; set; }

        /// <summary>
        /// recipients - A list of recipients (specifically, the envelope RCPT TO addresses) that were matched by the active receipt rule.The addresses listed here may differ from those listed by the destination field in the mail Object.
        /// </summary>
        public List<string> Recipients { get; set; }

        /// <summary>
        /// spamVerdict - Object that indicates whether the message is spam.For a list of possible values, see spamVerdict Object.
        /// </summary>
        public AwsSesReceiptNotificationReceiptSpamVerdict SpamVerdict { get; set; }

        /// <summary>
        /// spfVerdict - Object that indicates whether the Sender Policy Framework (SPF) check passed.For a list of possible values, see spfVerdict Object.
        /// </summary>
        public AwsSesReceiptNotificationReceiptSpfVerdict SpfVerdict { get; set; }

        /// <summary>
        /// timestamp - String that specifies the date and time at which the action was triggered, in ISO 8601 format.
        /// </summary>
        public string Timestamp { get; set; }

        /// <summary>
        /// virusVerdict - Object that indicates whether the message contains a virus. For a list of possible values, see virusVerdict Object.
        /// </summary>
        public AwsSesReceiptNotificationReceiptVirusVerdict VirusVerdict { get; set; }
    }

    /// <summary>
    /// Object that encapsulates information about the action that was executed.
    /// </summary>
    public class AwsSesReceiptNotificationReceiptAction
    {
        /// <summary>type - String that indicates the type of action that was executed.Possible values are S3, SNS, Bounce, Lambda, Stop, and WorkMail.</summary>
        public string Type { get; set; }

        /// <summary>topicArn - String that contains the Amazon Resource Name(ARN) of the Amazon SNS topic to which the notification was published.</summary>
        public string TopicArn { get; set; }

        /// <summary>bucketName - String that contains the name of the Amazon S3 bucket to which the message was published.Present only for the S3 action type.</summary>
        public string BucketName { get; set; }

        /// <summary>objectKey - String that contains a name that uniquely identifies the email in the Amazon S3 bucket. This is the same as the messageId in the mail Object.Present only for the S3 action type.</summary>
        public string ObjectKey { get; set; }

        /// <summary>smtpReplyCode - String that contains the SMTP reply code, as defined by RFC 5321. Present only for the bounce action type.</summary>
        public string SmtpReplyCode { get; set; }

        /// <summary>statusCode - String that contains the SMTP enhanced status code, as defined by RFC 3463. Present only for the bounce action type.</summary>
        public string StatusCode { get; set; }

        /// <summary>message - String that contains the human-readable text to include in the bounce message.Present only for the bounce action type.</summary>
        public string Message { get; set; }

        /// <summary>sender - String that contains the email address of the sender of the email that bounced.This is the address from which the bounce message was sent.Present only for the bounce action type.</summary>
        public string Sender { get; set; }

        /// <summary>functionArn - String that contains the ARN of the Lambda function that was triggered.Present only for the Lambda action type.</summary>
        public string FunctionArn { get; set; }

        /// <summary>invocationType - String that contains the invocation type of the Lambda function.Possible values are RequestResponse and Event. Present only for the Lambda action type.</summary>
        public string InvocationType { get; set; }

        /// <summary>organizationArn - String that contains the ARN of the Amazon WorkMail organization.Present only for the WorkMail action type.</summary>
        public string OrganizationArn { get; set; }
    }

    /// <summary>
    /// Results of DKIM
    /// </summary>
    public class AwsSesReceiptNotificationReceiptDkimVerdict
    {
        /// <summary>
        /// String that contains the DKIM verdict. Possible values are:
        /// PASS: The message passed DKIM authentication. 
        /// FAIL: The message failed DKIM authentication.
        /// GRAY: The message is not DKIM-signed.
        /// PROCESSING_FAILED: There is an issue that prevents Amazon SES from checking the DKIM signature.For example, DNS queries are failing or the DKIM signature header is not formatted properly.
        /// </summary>
        public string Status { get; set; }
    }

    /// <summary>
    /// Results of DMARC
    /// </summary>
    public class AwsSesReceiptNotificationReceiptDmarcVerdict
    {
        /// <summary>
        /// String that contains the DMARC verdict.Possible values are:
        /// PASS: The message passed DMARC authentication.
        /// FAIL: The message failed DMARC authentication. 
        /// GRAY: The message failed DMARC authentication, and the sending domain does not have a DMARC policy, or uses the p = none policy.
        /// PROCESSING_FAILED: There is an issue that prevents Amazon SES from providing a DMARC verdict.
        /// </summary>
        public string Status { get; set; }
    }

    /// <summary>
    /// Results of virus scan
    /// </summary>
    public class AwsSesReceiptNotificationReceiptSpamVerdict
    {
        /// <summary>
        /// String that contains the result of spam scanning. Possible values are:
        /// PASS: The spam scan determined that the message is unlikely to contain spam.
        /// FAIL: The spam scan determined that the message is likely to contain spam.
        /// GRAY: Amazon SES scanned the email but could not determine with confidence whether it is spam.
        /// PROCESSING_FAILED: Amazon SES was unable to scan the email. For example, the email is not a valid MIME message.
        /// </summary>
        public string Status { get; set; }
    }

    /// <summary>
    /// Results of SPF
    /// </summary>
    public class AwsSesReceiptNotificationReceiptSpfVerdict
    {
        /// <summary>
        /// String that contains the SPF verdict. Possible values are:
        /// PASS: The message passed SPF authentication.
        /// FAIL: The message failed SPF authentication.
        /// GRAY: There is no SPF policy under the domain used in the MAIL FROM command.
        /// PROCESSING_FAILED: There is an issue that prevents Amazon SES from checking the SPF record.For example, DNS queries are failing.
        /// </summary>
        public string Status { get; set; }
    }

    /// <summary>
    /// Result of virus scan
    /// </summary>
    public class AwsSesReceiptNotificationReceiptVirusVerdict
    {
        /// <summary>
        /// String that contains the result of virus scanning. Possible values are:
        /// PASS: The message does not contain a virus.
        /// FAIL: The message contains a virus.
        /// GRAY: Amazon SES scanned the email but could not determine with confidence whether it contains a virus.
        /// PROCESSING_FAILED: Amazon SES is unable to scan the content of the email. For example, the email is not a valid MIME message.
        /// </summary>
        public string Status { get; set; }
    }

    /// <summary>
    /// Object that contains information about the email associated with the notification.
    /// </summary>
    public class AwsSesReceiptNotificationMail
    {
        /// <summary>
        /// destination - A complete list of all recipient addresses(including To: and CC: recipients) from the MIME headers of the incoming email.
        /// </summary>
        public List<string> Destination { get; set; }

        /// <summary>
        /// messageId - String that contains the unique ID assigned to the email by Amazon SES.If the email was delivered to Amazon S3, the message ID is also the Amazon S3 object key that was used to write the message to your Amazon S3 bucket.
        /// </summary>
        public string MessageId { get; set; }

        /// <summary>
        /// source - String that contains the email address (specifically, the envelope MAIL FROM address) that the email was sent from. 
        /// </summary>
        public string Source { get; set; }

        /// <summary>
        /// timestamp - String that contains the time at which the email was received, in ISO8601 format.
        /// </summary>
        public string Timestamp { get; set; }

        /// <summary>
        /// headers - A list of Amazon SES headers and your custom headers.Each header in the list has a name field and a value field.
        /// </summary>
        public List<AwsSesEventHeaderItem> Headers { get; set; }

        /// <summary>
        /// commonHeaders - A list of headers common to all emails.Each header in the list is composed of a name and a value. 
        /// </summary>
        public AwsSesReceiptNotificationCommonHeaders CommonHeaders { get; set; }

        /// <summary>
        /// headersTruncated - String that specifies whether the headers were truncated in the notification, which will happen if the headers are larger than 10 KB.Possible values are true and false.
        /// </summary>
        public bool HeadersTruncated { get; set; }
    }



    /// <summary>
    /// AwsSesReceiptNotificationCommonHeaders
    /// </summary>
    public class AwsSesReceiptNotificationCommonHeaders
    {
        /// <summary>messageId - The ID of the original message.</summary>
        public string MessageId { get; set; }

        /// <summary>date - The date and time when Amazon SES received the message.</summary>
        public string Date { get; set; }

        /// <summary>to - The values in the To header of the email.</summary>
        public List<string> To { get; set; }

        /// <summary>cc - The values in the CC header of the email.</summary>
        public List<string> Cc { get; set; }

        /// <summary>bcc - The values in the BCC header of the email.</summary>
        public List<string> Bcc { get; set; }

        /// <summary>from - The values in the From header of the email.</summary>
        public List<string> From { get; set; }

        /// <summary>sender - The values in the Sender header of the email.</summary>
        public List<string> Sender { get; set; }

        /// <summary>returnPath - The values in the Return-Path header of the email.
        /// This is list in events common headers, but being seen as single value here. (????)
        /// </summary>
        public string ReturnPath { get; set; }

        /// <summary>reply-to - The values in the Reply-To header of the email.</summary>
        public List<string> ReplyTo { get; set; }

        /// <summary>subject - The value of the Subject header for the email.</summary>
        public string Subject { get; set; }
    }
}

//-------------------------------------------------------------------------------------------------------------------//
// EOF                                                                                                               //
//-------------------------------------------------------------------------------------------------------------------//
